body {
     background-color: #fff;
     background-size: 100% 1.2em;
     background-image: -webkit-linear-gradient(0deg, transparent 79px, #fff 79px, #fff 81px, transparent 81px), -webkit-linear-gradient(#eee .05em, transparent .05em);
     background-image: -moz-linear-gradient(0deg, transparent 79px, #fff 79px, #fff 81px, transparent 81px), -moz-linear-gradient(#eee .05em, transparent .05em);
     background-image: linear-gradient(90deg, transparent 79px, #fff 79px, #fff 81px, transparent 81px), linear-gradient(#eee .05em, transparent .05em);
     -pie-background: linear-gradient(90deg, transparent 79px, #abced4 79px, #abced4 81px, transparent 81px) 0 0 / 100% 1.2em, linear-gradient(#eee .05em, transparent .05em) 0 0 / 100% 1.2em #fff;
     behavior: url(/pie/PIE.htc);
}
 .toolbox {
     background-color: #00c278;
}
 .workArea {
     height: 600px;
}
 .navbar-default .navbar-nav > li > a, .navbar-default .navbar-brand {
     color: #fff;
}
 .added.agentItem {
     list-style: none;
     border-radius: 100%;
     padding: 10px;
     text-decoration: none;
     background: #337ab7;
}
 .agentItem a {
     color: #fff;
}
 .agentWorkArea {
     width: 48%;
     margin: 1%;
     border-radius: 50%;
     border: 1px solid black;
     height: 600px;
     display: inline-block;
     position: relative;
}
 .agentHead {
     position: absolute;
     top: -2.5%;
     left: 0;
     right: 0;
     width: 100px;
     margin: 0 auto;
}
.mainGoalAdded.agentHead {
    position: absolute !important;
    top: 6%;
}
.mainGoalAdded a {
    top: 40% !important;
}


 .added.softItem, .added.operationItem{
     position: relative;
     width: 70px;
     height: 70px;
     border-radius: 50%;
     background-color: whitesmoke;
     cursor: pointer;
     list-style-type: none;
     z-index: 2;
}
 .added.softItem::before, .added.softItem::after, .added.operationItem::before, .added.operationItem::after {
     content: "";
     display: block;
     width: 50px;
     height: 50px;
     position: absolute;
     top: 8.5px;
     background-color: inherit;
     border-radius: inherit;
}
 .added.softItem::before, .added.operationItem::before {
     left: -100%;
     margin-left: calc(( 70px / 2));
}
 .added.softItem::after, .added.operationItem::after {
     right: -100%;
     margin-right: calc(( 70px / 2));
}
 .added.softItem a, .added.operationItem a {
     position: absolute;
     z-index: 3;
     width: 200%;
     left: -50%;
     text-align: center;
     top: 30%;
     margin-top: -0.5em;
     font-size: 15.5px;
     text-decoration: none;
}
 .added.operationItem a {
     top: 40%;
}
 .added.softItem p {
     margin-bottom: 0;
     text-align: center;
     position: absolute;
     top: 50%;
     width: 200%;
     left: -50%;
}
 .added.operationItem {
     background-color: #7b7b7b;
}
 .added.operationItem a {
     color:#fff;
}
 .softItem a, .operationItem a {
     z-index: 1000;
}
 .agent-option, .soft-option, .operation-option, .contribution-option {
     display: none;
}
 .agentModal .modalContent{
     display: none;
}
 .agentModal .modalContent.agentContent{
     display: block;
}
 .softModal .modalContent{
     display: none;
}
 .softModal .modalContent.softContent{
     display: block;
}
 .operationModal .modalContent{
     display: none;
}
 .operationModal .modalContent.operationContent{
     display: block;
}
.connectionModal .modalContent{
     display: none;
}
.connectionModal .modalContent.connectionContent {
    display: block;
}
.actorModal .modalContent{
     display: none;
}
.actorModal .modalContent.actorContent {
    display: block;
}



 .added.softItem {
     position: relative;
}
 .connect {
     position: absolute;
     height: 10px;
     width: 10px;
     border-radius: 100%;
     bottom: 0;
     left: 0;
     right: 0;
     margin: 0 auto;
     background: orange;
}
 .operationModal .btnDelete, .softModal .btnDelete {
     display: inline-block !important;
}
 .added.softItem::hover {
    /* Start the shake animation and make the animation last for 0.5 seconds */
     animation: shake 0.99s;
    /* When the animation is finished, start again */
     animation-iteration-count: infinite;
}
 .chosen{

    /* Start the shake animation and make the animation last for 0.5 seconds */
  animation: shake 0.5s; 
  background-color: #3da768 !important;

  /* When the animation is finished, start again */
  animation-iteration-count: infinite; 
}
 @keyframes shake {
     0% {
         transform: translate(1px, 1px) rotate(0deg);
    }
     10% {
         transform: translate(-1px, -2px) rotate(-1deg);
    }
     20% {
         transform: translate(-3px, 0px) rotate(1deg);
    }
     30% {
         transform: translate(3px, 2px) rotate(0deg);
    }
     40% {
         transform: translate(1px, -1px) rotate(1deg);
    }
     50% {
         transform: translate(-1px, 2px) rotate(-1deg);
    }
     60% {
         transform: translate(-3px, 1px) rotate(0deg);
    }
     70% {
         transform: translate(3px, 1px) rotate(-1deg);
    }
     80% {
         transform: translate(-1px, -1px) rotate(1deg);
    }
     90% {
         transform: translate(1px, 2px) rotate(0deg);
    }
     100% {
         transform: translate(1px, -2px) rotate(-1deg);
    }
}

 #line {
     position: absolute;
     top: 10px;
     left: -50px;
     width: 40px;
     margin: 0;
     -webkit-transform: rotateZ(53.1deg);
     border-width: 1px;
     border-style: solid;
     border-image: linear-gradient(to right, #ffffff 0%,#ffffff 49%,#000000 50%,#000000 100%) 1;
}
 #p2 {
     border-radius: 5px;
     width: 10px;
     background: #000;
     position: absolute;
     height: 10px;
     top: 45px;
     left: 95px 
}
.connection-style {
    border: 3px solid #051;
        opacity: 0.5;
        z-index: 1;
        border-radius: 100%;
       /* pointer-events: auto !important;*/
        cursor: pointer;
 }
 .connection-style:hover {
    background: #63d065;
 }
 .connection-style div {
    position: relative;
    height: inherit;
 }
  .connection-style p {
     position: absolute;
     top: 50%;
     bottom: 50%;
     transform: translate(-50%, -50%);
     margin: 0;
}
